openapi: 3.0.3
info:
  title: Ton Society API
  description: Public API specification
  version: 1.0.0
servers:
  - url: https://society.ton.org/v1
tags:
  - name: Infra
    description: Infastructure endpoints
  - name: Users
    description: Handle users related data
  - name: Collections
    description: Handle data related to the collections of SBTs stroed in the internal database
  - name: User Activities
    description: Handle data related to the user activities
paths:
  /status:
    get:
      tags:
        - Infra
      summary: API status
      description: API status healthcheck
      responses:
        '200':
          description: Successful operation
        '500':
          description: Internal server error
  /users:
    get:
      tags:
        - Users
      summary: Finds users
      description: Finds top users in the order of the number of awards received, `is_name_changed` field, `is_telegram_verified` field, the date awards has been received, and, finally, user Id. Only publicly available data is exposed.
      operationId: findUsers
      parameters:
        - name: _start
          in: query
          description: Paginated list start index
          required: true
          explode: true
          schema:
            type: number
            default: 0
        - name: _end
          in: query
          description: Paginated list end index
          required: true
          explode: true
          schema:
            type: number
            default: 10
        - name: collection_id
          in: query
          description: Filters users who own an SBT in the given collection. Collection ids are usually provided in the `api::activity` Strapi entity.
          required: false
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessPublicUsers'
        '400':
          description: Invalid query/path param provided
        '500':
          description: Internal server error
  /users/{username}:
    get:
      tags:
        - Users
      summary: Finds a user by username
      description: Simply returns publicly available user data
      operationId: findUserByUsername
      parameters:
        - name: username
          in: path
          description: User's username
          required: true
          explode: true
          schema:
            type: string
            default: 41d888dc37
        - name: collection_id
          in: query
          description: Returns user data only if this user owns an SBT in the colleciton with the provided id.
          required: false
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessPublicUser'
        '400':
          description: Invalid query/path param provided
        '500':
          description: Internal server error
  /users/{username}/rank:
    get:
      tags:
        - Users
      summary: Finds a rank of the user
      description: Returns user's rank in the contributors list given user's username
      operationId: findUserRankByUsername
      parameters:
        - name: username
          in: path
          description: User's username
          required: true
          explode: true
          schema:
            type: string
            default: 41d888dc37
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                    enum:
                      - success
                      - error
                      - fail
                  data:
                    type: integer
                    format: int64
                    example: 112
        '400':
          description: Invalid query/path param provided
        '500':
          description: Internal server error
  /users/{username}/sbts:
    get:
      tags:
        - Users
      summary: Finds SBTs owned by a user
      description: Returns a paginated list of SBTs owned by a user given user's username
      operationId: findUserNftsByUsername
      parameters:
        - name: username
          in: path
          description: User's username
          required: true
          explode: true
          schema:
            type: string
            default: 41d888dc37
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessSbts'
        '400':
          description: Invalid query/path param provided
        '500':
          description: Internal server error
  /collections/{id}:
    get:
      tags:
        - Collections
      summary: Finds an SBT collection
      description: Returns an SBT collection data given its id in the database
      operationId: findCollectionById
      parameters:
        - name: id
          in: path
          description: SBT colleciton id
          required: true
          explode: true
          schema:
            type: number
            default: 123
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessCollection'
        '400':
          description: Invalid query/path param provided
        '500':
          description: Internal server error
  /collections/{id}/participants:
    get:
      tags:
        - Collections
      summary: Finds activity participants
      description: Returns a list of users partcipated in the activity related to the SBT collection with the given id
      operationId: findCollectionParticipantsById
      parameters:
        - name: id
          in: path
          description: SBT colleciton id
          required: true
          explode: true
          schema:
            type: number
            default: 123
        - name: limit
          in: query
          description: The maximum number of participants to return
          required: true
          explode: true
          schema:
            type: number
            default: 3
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessCollectionParticipants'
        '400':
          description: Invalid query/path param provided
        '500':
          description: Internal server error 
  /last-activities:
    get:
      tags:
        - User Activities
      summary: Finds last activities made by user, i.e., last recevied awards
      description: An endpoint that compounds data from Users model, Sbt Tokens model, and Strapi Activties. Last activities are most recent rewards (or SBTs) received by users.
      operationId: findLastActivities
      parameters:
        - name: _start
          in: query
          description: Paginated list start index
          required: true
          explode: true
          schema:
            type: number
            default: 0
        - name: _end
          in: query
          description: Paginated list end index
          required: true
          explode: true
          schema:
            type: number
            default: 10
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessLastActivities'
        '400':
          description: Invalid query/path param provided
        '500':
          description: Internal server error
  
  /hubs:
    get:
      tags:
        - Activities
      summary: Finds paginated list of ton-society hubs
      description: An endpoint that compounds data from Users model, Sbt Tokens model, and Strapi Activties. Last activities are most recent rewards (or SBTs) received by users.
      operationId: findHubs
      parameters:
        - name: _start
          in: query
          description: Paginated list start index
          required: true
          explode: true
          schema:
            type: number
            default: 0
        - name: _end
          in: query
          description: Paginated list end index
          required: true
          explode: true
          schema:
            type: number
            default: 10
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessHubs'
        '400':
          description: Invalid query/path param provided
        '500':
          description: Internal server error
       
  /activities:
    post:
      tags:
        - Activities
      summary: Create a new activity
      description: An endpoint that allows to create a new activity of the "Events" activity group. See [ton-society events page](https://society.ton.org/activities/events). Newly created activity is not posted on the website right away - it first needs to go through moderation first. 
      operationId: createEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [title, subtitle, description, hub_id]
              properties:
                title:
                  type: string
                  description: The activity title
                  example: "Open League Summer: Taipei Bootcamp"
                subtitle:
                  type: string
                  description: The activity subtitle
                  example: "$2,000,000 in prizes and 13 IRL Bootcamps!"
                description:
                  type: string
                  description: The activity description
                  example: "**Meet Open League Summer Bootcamp in Taipei!**\nPITCH. BUILD. GROW. WIN.\n**$2,000,000** in prizes and 13 IRL Bootcamp events — this is The Open League Summer 🔥\nIt’s going to be hot and exciting!"
                hub_id:
                  type: integer
                  description: Id of the corresponding ton-society hub of the activity (e.g., CIS, Global, etc.). Use [/hubs](https://society.ton.org/v1/hubs?_start=0&_end=3) endpoint to retrieve the list of hubs.
                  example: 1
                additional_info:
                  type: string
                  description: The activity additional information
                  example: "Taipei, Taiwan"
                start_date:
                  type: string
                  description: The start date of the activity in the appropriate format
                  example: "2024-05-31"
                end_date:
                  type: string
                  description: The end date of the activity in the appropriate format
                  example: "2024-06-02"
                cta_button:
                  type: object
                  required: [label, link]
                  properties:
                    label:
                      type: string
                      description: Label shown on the CTA button
                      example: "Event details"
                    link:
                      type: string
                      description: External link opened when the CTA button is clicked
                      example: https://lu.ma/3mx6a7l7
                    
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessEventCreation'
        '400':
          description: Invalid query/path param provided
        '500':
          description: Internal server error
      security:
        - api_key: []
        - partner_id: []
  
  /activities/{activity_id}:
    patch:
      tags:
        - Activities
      summary: Update an existing activity (earlier created by the same partner id)
      description: An endpoint that allows to update an activity of the "Events" activity group. See [ton-society events page](https://society.ton.org/activities/events).
      operationId: updateEvent
      parameters:
        - name: activity_id
          in: path
          description: Id of the activity to be patched
          required: true
          explode: true
          schema:
            type: number
            default: 1101
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The activity title
                  example: "Open League Summer: Taipei Bootcamp"
                subtitle:
                  type: string
                  description: The activity subtitle
                  example: "$2,000,000 in prizes and 13 IRL Bootcamps!"
                description:
                  type: string
                  description: The activity description
                  example: "**Meet Open League Summer Bootcamp in Taipei!**\nPITCH. BUILD. GROW. WIN.\n**$2,000,000** in prizes and 13 IRL Bootcamp events — this is The Open League Summer 🔥\nIt’s going to be hot and exciting!"
                hub_id:
                  type: integer
                  description: Id of the corresponding ton-society hub of the activity (e.g., CIS, Global, etc.). Use [/hubs](https://society.ton.org/v1/hubs?_start=0&_end=3) endpoint to retrieve the list of hubs.
                  example: 1
                additional_info:
                  type: string
                  description: The activity additional information
                  example: "Taipei, Taiwan"
                start_date:
                  type: string
                  description: The start date of the activity in the appropriate format. To nullify pass "null"
                  example: "2024-05-31"
                end_date:
                  type: string
                  description: The end date of the activity in the appropriate format. To nullify pass "null"
                  example: "2024-06-02"
                cta_button:
                  type: object
                  properties:
                    label:
                      type: string
                      description: Label shown on the CTA button
                      example: "Event details"
                    link:
                      type: string
                      description: External link opened when the CTA button is clicked
                      example: https://lu.ma/3mx6a7l7
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccess'
        '400':
          description: Invalid query/path param provided
        '500':
          description: Internal server error
      security:
        - api_key: []
        - partner_id: []
          
  /activities/{activity_id}/participants:
    post:
      tags:
        - Activities
      summary: Send list of even participants (wallet addresses)
      description: Send wallet addresses beloning to the participants of an event defined by the given activity id
      operationId: createParticipants
      parameters:
        - name: activity_id
          in: path
          description: Id of the activity to be patched
          required: true
          explode: true
          schema:
            type: number
            default: 1101
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [participants]
              properties:
                participants:
                  type: array
                  items:
                    type: string
                  description: The list of wallets (belong to participants)
                  example: ["EQDppPaiVVK5g-3O08RRuMSCyGf7fZ0kolzH19e8-bX-JxEG","EQAFO0JRD2-0tDiPzeQSXn5VuEkbN4cF1tRa8z-DJqg5Ls7V","EQAYgieGbaUNYunuRBAV7yZJj8ciyAKZ5oJIb1bhzyjNTPq6"]
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid query/path param provided
        '500':
          description: Internal server error
      security:
        - api_key: []
        - partner_id: []
  
  /activities/{activity_id}/rewards:
    post:
      tags:
        - Activities
      summary: Generates a unique reward link
      description: Returns a unique reward link for users to receive rewards through particpation in activities. The link is generated based on activity ID, user's unique identificator (wallet friendly address or Telegram user id). For example, users can [connect a wallet](https://docs.ton.org/develop/dapps/ton-connect/overview) before they start participating in the activity. In case of Telegram Mini App, simply use [window.Telegram.WebApp.initData.user.id](https://www.tapps.center/docs/packages/tma-js-init-data/user).
      operationId: createRewardLink
      parameters:
        - name: activity_id
          in: path
          description: Activity id
          required: true
          explode: true
          schema:
            type: number
            default: 129
      security:
        - api_key: []
        - partner_id: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRewardLinkBody'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessRewardLink'
        '400':
          description: activity not found, invalid wallet friendly address
        '500':
          description: Internal server error

  /csbts/collections/{address}/v1/items/{index}:
    get:
      tags:
        - Compressed SBTs
      summary: For a given collection, returns an item data and the proor cell
      description: The endpoint follows specifications outlined in the ["Compressed NFT Standard"](https://github.com/krigga/TEPs/blob/compressed-nfts/text/0000-compressed-nft-standard.md#1-itemsindex)
      operationId: findCsmtItem
      parameters:
        - name: address
          in: path
          description: SBT colleciton friendly address
          required: true
          explode: true
          schema:
            type: string
            default: EQAyaHk64ZntohYtixic2oOt2jyRV_GpJ0Qn-yl4Kh9vJz_i
        - name: index
          in: path
          description: Index of the requested item
          required: true
          explode: true
          schema:
            type: number
            default: 602
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsbtItemByIndex'
        '400':
          description: Invalid query/path param provided
        '500':
          description: Internal server error

  /csbts/collections/{address}/v1/items:
    get:
      tags:
        - Compressed SBTs
      summary: For a given collection, returns list of item in the slice given its offset and count
      description: The endpoint follows specifications outlined in the ["Compressed NFT Standard"](https://github.com/krigga/TEPs/blob/compressed-nfts/text/0000-compressed-nft-standard.md#2-itemsoffsetoffsetcountcount)
      operationId: findCsbtItems
      parameters:
        - name: address
          in: path
          description: SBT colleciton friendly address
          required: true
          explode: true
          schema:
            type: string
            default: EQAyaHk64ZntohYtixic2oOt2jyRV_GpJ0Qn-yl4Kh9vJz_i
        - name: offset
          in: query
          description: Starting index of the returned slice of items
          required: true
          explode: true
          schema:
            type: number
            default: 11
        - name: Count
          in: query
          description: Number of items to return
          required: true
          explode: true
          schema:
            type: number
            default: 26
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsbtItems'
        '400':
          description: Invalid query/path param provided
        '500':
          description: Internal server error

  /csbts/collections/{address}/v1/state:
    get:
      tags:
        - Compressed SBTs
      summary: Returns the state of a compressed SBT colleciton
      description: The endpoint follows specifications outlined in the ["Compressed NFT Standard"](https://github.com/krigga/TEPs/blob/compressed-nfts/text/0000-compressed-nft-standard.md#3-state)
      operationId: findCsbtCollectionState
      parameters:
        - name: address
          in: path
          description: SBT colleciton friendly address
          required: true
          explode: true
          schema:
            type: string
            default: EQAyaHk64ZntohYtixic2oOt2jyRV_GpJ0Qn-yl4Kh9vJz_i
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsbtCollectionState'
        '400':
          description: Invalid query/path param provided
        '500':
          description: Internal server error

components:
  schemas:
    PublicUser:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Priscilla Miller
        username:
          type: string
          example: 238497403a24c
        bio:
          type: string
          example: 23 y.o. designer from San-Francisco
        awards_count:
          type: integer
          example: 166
        last_award_at:
          type: integer
          example: 1711013388
        created_at:
          type: integer
          example: 1711013388
        updated_at:
          type: integer
          example: 1711013388
        avatar_url:
          type: string
          format: url
          example: https://storage.googleapis.com/ton-strapi/Avatar_1321317640_92f4adfc3f/Avatar_1321317640_92f4adfc3f.png
    SuccessPublicUser:
      type: object
      properties:
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail
        data:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/PublicUser'
    SuccessPublicUsers:
      type: object
      properties:
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail
        data:
          type: object
          properties:
            count:
              type: integer
              format: int64
              example: 324
            users:
              type: array
              items:
                $ref: '#/components/schemas/PublicUser'
    Sbt:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        sbt_collections_id:
          type: integer
          format: int64
          example: 21
        content_uri:
          type: string
        name:
          type: string
          example: TON Bounty #305
        description:
          type: string
          example: Reward for valuable TON Ecosystem contributions
        image:
          type: string
          example: https://sbt-bot-minter.s3.amazonaws.com/TON%20Bounties%20Contributors/logo.jpg
        content_json:
          type: object
        created_at:
          type: integer
          format: int64
          example: 1711095609
        updated_at:
          type: integer
          format: int64
          example: 1711095609
        sbt_collection_address:
          type: string
          example: EQBAJCGblueX9Nwr84TmrcLmIoPbeunnujBoziT3MtJuaJ0J
    SuccessSbts:
      type: object
      properties:
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail
        data:
          type: object
          properties:
            count:
              type: integer
              format: int64
              example: 18
            sbts:
              type: array
              items:
                $ref: '#/components/schemas/Sbt'

    Collection:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 128
        raw_address:
          type: string
          example: 0:4024219B96E797F4DC2BF384E6ADC2E62283DB7AE9E7BA3068CE24F732D26E68
        friendly_address:
          type: string
          example: EQBAJCGblueX9Nwr84TmrcLmIoPbeunnujBoziT3MtJuaJ0J
        next_item_index:
          type: integer
          format: int64
          example: 151
        content_uri:
          type: string
          example: https://sbt-bot-minter.s3.amazonaws.com/TON%20Bounties%20Contributors/collection.json
        raw_owner_address:
          type: string
          example: 0:C290189A787E15FBA30142A3250B70F3019F8C8553E9A5E1BAF65723AA3C6C47
        friendly_owner_address:
          type: string
          example: UQDCkBiaeH4V-6MBQqMlC3DzAZ-MhVPppeG69lcjqjxsR13R
        name:
          type: string
          example: TON Bounties Contributors
        description:
          type: string
          example: TON Bounties program is an open community initiative that is fast-forwarding support for valuable contributions enhancing The Open Network Ecosystem
        image:
          type: string
          example: https://sbt-bot-minter.s3.amazonaws.com/TON%20Bounties%20Contributors/logo.jpg
        content_json:
          type: object
        created_at:
          type: integer
          format: int64
          example: 1711095609
        updated_at:
          type: integer
          format: int64
          example: 1711095609
        version:
          type: integer
          format: int64
          example: 1
    SuccessCollection:
      type: object
      properties:
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail
        data:
          type: object
          properties:
            count:
              type: integer
              format: int64
              example: 324
            users:
              type: array
              items:
                $ref: '#/components/schemas/Collection'
    SuccessCollectionParticipants:
      type: object
      properties:
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail
        data:
          type: object
          properties:
            collection:
              $ref: '#/components/schemas/Collection'
            count:
              type: integer
              format: int64
              example: 69
            participants:
              type: array
              items:
                $ref: '#/components/schemas/PublicUser'
    SuccessLastActivities:
      type: object
      properties:
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail
        data:
          type: object
          properties:
            count:
              type: integer
              format: int64
              example: 68075
            data:
              type: array
              items:
                type: object
                properties:
                  activity:
                    type: object
                    description: Strapi entity
                  award:
                    type: object
                    properties:
                      created_at:
                        type: integer
                        format: int64
                      description:
                        type: string
                      image:
                        type: string
                  user:
                    $ref: '#/components/schemas/PublicUser'
    
    Hub:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        attributes:
          type: object
          properties:
            title:
              type: string
              example: Global
            url:
              type: string
              example: https://t.me/tonsociety_chat
  
    SuccessHubs:
      type: object
      properties:
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail
        data:
          type: array
          items:
            $ref: '#/components/schemas/Hub'

    SuccessEventCreation:
      type: object
      properties:
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail
        data:
          type: object
          properties:
            activity_id:
              type: integer
              description: Unique id of the newly created activity
              example: 239
            activity_url:
              type: string
              description: Unique society.ton.org url of the newly created activity (the value might change after moderation)
              example: https://society.ton.org/open-league-summer-taipei-bootcamp
            activity_reward_url:
              type: string
              description: Link that allows activity participants to claim rewards ()in the form of SBTs). Rewards are to be minted later
              example: https://society.ton.org/welcome/07a4a84cd28adb3324345c68a7a0884b:e4c9e668b471ea77fa3a8435ea693595
      
    EmptySuccess:
      type: object
      properties:
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail
        data:
          type: object
  
    CsbtItem:
      type: object
      properties:
        metadata:
          type: object
          properties:
            owner:
              description: Item's owner
              type: string
              example: 0:000000000000000000000000000000000000000000000000000000000000000
            individual_content:
              description: Item's individual content
              type: string
              example: te6cckEBAQEACAAADDAuanNvbuTiyMU=
            name:
              type: string
              example: TON Bounties Contributors
            description:
              type: string
              example: TON Bounties program is an open community initiative that is fast-forwarding support for valuable contributions enhancing The Open Network Ecosystem
            image:
              type: string
              example: https://sbt-bot-minter.s3.amazonaws.com/TON%20Bounties%20Contributors/logo.jpg
        index:
          type: string
          description: Item's index
          example: 0
          
    CsbtItemByIndex:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/CsbtItem'
        proof_cell:
          type: string
          description: Proof cell that allows one claiming an item on the blockchain
          example: te6cckEBBgEAeQACAAEDAUOAFa1KqA2Oswxbo4Rgh/q6NEaPLuK9o3fo1TFGn+MySjqQAgAMMi5qc29uAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQBQF4S3GMDJY/HoZd6TCREIOnCaYlF23hNzJaSsfMd1S7nBQAA8muEeQ==
  
    CsbtItems:
      type: object
      properties:
        items:
          type: array
          description: if no items exisits in the slice, null values should be returned instead (see the standrad for details)
          items:
            $ref: '#/components/schemas/CsbtItem'
        last_index:
          type: string
          description: Index of the very last item in the collection. This is a part of the collection state.
          example: 37

    CsbtCollectionState:
      type: object
      properties:
        last_index:
          type: string
          description: Index of the very last item in the collection
          example: 37
        address:
          type: string
          description: The address of the collection smart contract that this API augments
          example: 0:000000000000000000000000000000000000000000000000000000000000000
  

    CreateRewardLinkBody:
      type: object
      properties:
        wallet_address:
          type: string
          description: The wallet address (in the friendly format), to which a reward is to be issued. Can be left empty if telegram_user_id is provided.
          example: EQDxnrrz-0kgdjehShvisBy2sX7ATVFgoiFKStnD7D8qihVv
        telegram_user_id:
          type: integer
          format: int64
          description: Telegram id associated with an account, to which a reward is to be issued. Can be left empty if wallet_address is provided.
          example: 439739
        attributes:
          type: array
          description: Additional SBT attributes to be included in item metadata.
          items:
            type: object
            properties:
              trait_type:
                type: string
                example: 'Organizer'
              value:
                type: string
                example: 'TON Society Asia'

    SuccessRewardLink:
      type: object
      properties:
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail
        data:
          type: object
          properties:
            reward_link:
              type: string
              example: https://society.ton.org/welcome/52528543-df85-4529-afbd-07ac7c48187d

  securitySchemes:
    api_key:
      type: apiKey
      name: x-api-key
      in: header
    partner_id:
      type: apiKey
      name: x-partner-id
      in: header
